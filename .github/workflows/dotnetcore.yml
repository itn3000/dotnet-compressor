name: .NET Core Build

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: "ubuntu-24.04"
            rid: "linux-x64"
            linker: "clang-16"
            imagetype: ubuntu
          - os: "windows-latest"
            rid: "win-x64"
            imagetype: windows
          - os: "macos-13"
            rid: "osx-x64"
            imagetype: mac
    env:
      CppCompilerAndLinker: ${{ matrix.linker }}
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          8.0.x
          9.0.x
    - name: restore dotnet tool
      run: dotnet tool restore
    - name: Build with dotnet(Release)
      run: dotnet tool run dotnet-cake build.cake --Configuration=Release --IsRelease
      if: matrix.imagetype == 'windows' && startsWith(github.ref, 'refs/tags/')
    - name: Build with dotnet(Development)
      run: dotnet tool run dotnet-cake build.cake --Configuration=Release
      if: matrix.imagetype == 'windows' && !startsWith(github.ref, 'refs/tags/')
    - name: push development nuget package
      run: "dotnet tool run dotnet-cake build.cake \"--Configuration=Release\" \"--Target=NuGet.Push.GitHub\" \"--Username=itn3000\" \"--Password=${{ secrets.GITHUB_TOKEN }}\""
      if: matrix.imagetype == 'windows' && endsWith(github.ref, 'master')
    - name: collect nuget package as artifact
      uses: actions/upload-artifact@v4
      with:
        name: nupkg-${{matrix.rid}}
        path: dist/Release/nupkg
      if: matrix.imagetype == 'windows'
    - name: update apt cache
      run: sudo apt-get update 
      if: matrix.imagetype == 'ubuntu'
    - name: installing prerequisit packages for corert
      run: sudo apt-get install -y libkrb5-dev zlib1g-dev
      if: matrix.imagetype == 'ubuntu'
    - name: build native binary
      run: "dotnet tool run dotnet-cake build.cake \"--Configuration=Release\" \"--Target=Native\" \"--Runtime=${{matrix.rid}}\""
    - name: stripping binary
      run: strip dist/native/Release/${{matrix.rid}}/dcomp
      if: matrix.imagetype != 'windows'
    - name: collect native binary as artifact
      uses: actions/upload-artifact@v4
      with:
        name: bin-${{matrix.rid}}
        path: dist/native/Release/${{matrix.rid}}
